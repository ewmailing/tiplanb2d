/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package org.box2d.box2d;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.util.Log;
import org.appcelerator.titanium.util.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;

import android.app.Activity;

import com.badlogic.gdx.physics.box2d.Body;

import co.lanica.platino.proxy.GameViewProxy;
import co.lanica.platino.proxy.SpriteProxy;
import co.lanica.platino.PlatinoSprite;

// This proxy can be created by calling Box2d.createBody({message: "hello world"})
@Kroll.proxy(creatableInModule=Box2dModule.class)
public class BodyProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String LCAT = "BodyProxy";
	private static final boolean DBG = TiConfig.LOGD;

	private class BodyView extends TiUIView
	{
		public BodyView(TiViewProxy proxy) {
			super(proxy);
			LayoutArrangement arrangement = LayoutArrangement.DEFAULT;

			if (proxy.hasProperty(TiC.PROPERTY_LAYOUT)) {
				String layoutProperty = TiConvert.toString(proxy.getProperty(TiC.PROPERTY_LAYOUT));
				if (layoutProperty.equals(TiC.LAYOUT_HORIZONTAL)) {
					arrangement = LayoutArrangement.HORIZONTAL;
				} else if (layoutProperty.equals(TiC.LAYOUT_VERTICAL)) {
					arrangement = LayoutArrangement.VERTICAL;
				}
			}
			setNativeView(new TiCompositeLayout(proxy.getActivity(), arrangement));
		}

		@Override
		public void processProperties(KrollDict d)
		{
			super.processProperties(d);
		}
	}

	private Body theBody;
	private SpriteProxy viewProxy;
	private GameViewProxy theSurface;


	// Constructor
	public BodyProxy()
	{
		super();
	}
	public BodyProxy(Body the_body, SpriteProxy the_proxy, GameViewProxy the_surface)
	{
		super();
		theBody = the_body;
		viewProxy = the_proxy;
		theSurface = the_surface;
	}
	@Override
	public TiUIView createView(Activity activity)
	{
					TiUIView view = new BodyView(this);
			view.getLayoutParams().autoFillsHeight = true;
			view.getLayoutParams().autoFillsWidth = true;

			return view;
/*
		// I really don't know what I'm doing.
		//
		if(null == viewProxy)
		{
			TiUIView view = new BodyView(this);
			view.getLayoutParams().autoFillsHeight = true;
			view.getLayoutParams().autoFillsWidth = true;

			return view;
		}
		else
		{
			return viewProxy;
		}
		*/
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options)
	{
		super.handleCreationDict(options);
		
		if (options.containsKey("message")) {
			Log.d(LCAT, "example created with message: " + options.get("message"));
		}
	}
	
	// Methods
	@Kroll.method
	public void printMessage(String message)
	{
		Log.d(LCAT, "printing message: " + message);
	}


	@Kroll.getProperty @Kroll.method
	public String getMessage()
	{
        return "Hello World from my module";
	}

	@Kroll.setProperty @Kroll.method
	public void setMessage(String message)
	{
	    Log.d(LCAT, "Tried setting module message to: " + message);
	}

	@Kroll.getProperty @Kroll.method
	public Body getBody()
	{
        return theBody;
	}
	@Kroll.getProperty @Kroll.method
	public SpriteProxy getViewproxy()
	{
        return viewProxy;
	}



}
